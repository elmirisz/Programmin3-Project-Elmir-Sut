package elmir.sut.project;


/*
 * Author : Naveen Nandan

//very simple implementation!
 * 
 * 
 * Description : O(n) row-wise matrix multiplication
 */




//__________

import java.util.concurrent.atomic.AtomicIntegerArray;

public class ParallelMultiplier extends Thread {
   private int x;
   private int y;
   private int kernelHeight;
   private AtomicIntegerArray[] input;
   private AtomicIntegerArray[] k;
   private int kernelWidth;
   int output = 0;
		   
   public ParallelMultiplier(double[][] input, 
	        int x, int y, 
	        double[][] k, 
	        int kernelWidth, 
	        int kernelHeight) {
	   
      this.x = x;
      this.y = y;
      this.k = k;
      this.input = input;
      this.kernelHeight = kernelHeight;
      this.kernelWidth = kernelWidth;
      return output;
      
   }
   
   
   
  

   public void run() {
	   output = 0; //accumulator
	   for (int i = 0; i < kernelWidth; ++i) {
	   for (int j = 0; j < kernelHeight; ++j) {
	   output = output + (input[x + i][y + j] * k[i][j]); //we traverse through kernel and multiply
	   }
	   }
	   
   }
}






